/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ucr.ac.cr.ecci.Frames;

import java.awt.Component;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.RollbackException;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import ucr.ac.cr.ecci.DBManager;
import static ucr.ac.cr.ecci.Frames.VacaTableUI.centreWindow;
import ucr.ac.cr.ecci.Models.Bovino;
import ucr.ac.cr.ecci.Models.Finca;
import ucr.ac.cr.ecci.Models.Raza;

/**
 *
 * @author afg
 */
public class ToroUI extends javax.swing.JFrame {

    /**
     * Creates new form ToroUI
     */
    Bovino b;
    boolean detalles = false;
    
    public ToroUI() {
        centreWindow(this);
        initComponents();
        editarCheckBox.setVisible(false);
    }
    
    public ToroUI(Bovino bovino) {
        centreWindow(this);
        initComponents();
        this.b = bovino;
        idFormattedTextField.setText(Integer.toString(b.getId()));
        nombreTextField.setText(b.getNombre()); 
        if (b.getFechaNacimiento() != null){
            fechaDatePicker.setDate(b.getFechaNacimiento());
        }
        if (b.getPeso() != null){
            pesoFormattedTextField.setText(Double.toString(b.getPeso()));
        }
        fincaComboBox.setSelectedItem(b.getIdFinca());
        razaComboBox.setSelectedItem(b.getIdRaza());
        caracteristicasTextArea.setText(b.getCaracteristicas());
        
        setEnabledFalse();
        guardarButton.setVisible(false);
        
        detalles = true;
    }
    
     private void setEnabledFalse() {
        fincaComboBox.setEnabled(false);
        idFormattedTextField.setEditable(false);
        nombreTextField.setEditable(false);
        fechaDatePicker.setEditable(false);
        pesoFormattedTextField.setEditable(false);
        razaComboBox.setEnabled(false);
        caracteristicasTextArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        TCUGanaderosPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("TCUGanaderosPU").createEntityManager();
        fincaQuery = java.beans.Beans.isDesignTime() ? null : TCUGanaderosPUEntityManager.createQuery("SELECT f FROM Finca f");
        fincaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : fincaQuery.getResultList();
        bajaQuery = java.beans.Beans.isDesignTime() ? null : TCUGanaderosPUEntityManager.createQuery("SELECT b FROM Baja b");
        bajaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bajaQuery.getResultList();
        razaQuery = java.beans.Beans.isDesignTime() ? null : TCUGanaderosPUEntityManager.createQuery("SELECT r FROM Raza r");
        razaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : razaQuery.getResultList();
        jLabel12 = new javax.swing.JLabel();
        fincaComboBox = new javax.swing.JComboBox<>();
        editarCheckBox = new javax.swing.JCheckBox();
        idFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fechaDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel5 = new javax.swing.JLabel();
        pesoFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        razaComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        caracteristicasTextArea = new javax.swing.JTextArea();
        volverButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel12.setText("Finca");

        fincaComboBox.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Finca) {
                    Finca f = (Finca)value;
                    setText(f.getNombre());
                }
                return this;
            }
        });

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, fincaList, fincaComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        editarCheckBox.setText("Editar");
        editarCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                editarCheckBoxStateChanged(evt);
            }
        });
        editarCheckBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                editarCheckBoxPropertyChange(evt);
            }
        });

        idFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        jLabel1.setText("# Trazable: ");

        jLabel2.setText("Nombre: ");

        jLabel3.setText("Fecha de nacimiento: ");

        fechaDatePicker.setFormats(new String[]{"dd/MM/yyyy"});

        jLabel5.setText("Peso: ");

        pesoFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###.###"))));

        jLabel9.setText("kg");

        jLabel4.setText("Raza: ");

        razaComboBox.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Raza) {
                    Raza r = (Raza)value;
                    setText(r.getRaza());
                }
                return this;
            }
        });

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, razaList, razaComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        caracteristicasTextArea.setColumns(20);
        caracteristicasTextArea.setRows(5);
        jScrollPane1.setViewportView(caracteristicasTextArea);

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Caracter√≠sticas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(fincaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editarCheckBox))
                                .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pesoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(razaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(volverButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(guardarButton)))
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fincaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fechaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(pesoFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(razaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarButton)
                    .addComponent(volverButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_editarCheckBoxStateChanged
        if (editarCheckBox.isSelected()){
            fincaComboBox.setEnabled(true);
            nombreTextField.setEditable(true);
            fechaDatePicker.setEditable(true);
            pesoFormattedTextField.setEditable(true);
            razaComboBox.setEnabled(true);
            caracteristicasTextArea.setEditable(true);
            guardarButton.setVisible(true);

        } else if (!editarCheckBox.isSelected()){
            setEnabledFalse();
            guardarButton.setVisible(false);
        }
    }//GEN-LAST:event_editarCheckBoxStateChanged

    private void editarCheckBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_editarCheckBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_editarCheckBoxPropertyChange

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_volverButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        DBManager dbm = new DBManager();
        boolean guardar=true;
        if (!idFormattedTextField.getText().equals("")){
            if (detalles) {
                b.setNombre(nombreTextField.getText());
                b.setIdFinca((Finca) fincaComboBox.getSelectedItem());
                if(fechaDatePicker.getDate() != null ){
                    Calendar cal = Calendar.getInstance();
                    Date date= fechaDatePicker.getDate();
                    Date date2= cal.getTime();
                    if(date.before(date2)){
                        b.setFechaNacimiento(fechaDatePicker.getDate());
                    }else{
                        JOptionPane.showMessageDialog(new JFrame(),"La fecha no es v√°lida, debe agregar una fecha anterior o igual a la actual.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                        guardar=false;
                    }
                }else{
                    JOptionPane.showMessageDialog(new JFrame(),"Debe rellenar la espacio de la fecha de nacimiento del Toro.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                    guardar=false;
                }
                if (!pesoFormattedTextField.getText().equals("")){
                    b.setPeso(Double.parseDouble(pesoFormattedTextField.getText()));
                }
                b.setIdRaza((Raza) razaComboBox.getSelectedItem());
                b.setCaracteristicas(caracteristicasTextArea.getText());
                b.setEsToro((short)1);
                
                if(guardar){
                    try{
                    dbm.updateBovino(b);
                    dbm.close();
                    dispose();
                    } catch (RollbackException ex) {
                        JOptionPane.showMessageDialog(new JFrame(),"El numero trazable ya pertenece a otro bovino.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                int id = Integer.parseInt(idFormattedTextField.getText());
                Bovino t = new Bovino(id);
                t.setNombre(nombreTextField.getText());
                t.setIdFinca((Finca) fincaComboBox.getSelectedItem());
                
                if(fechaDatePicker.getDate() != null ){
                    Calendar cal = Calendar.getInstance();
                    Date date= fechaDatePicker.getDate();
                    Date date2= cal.getTime();
                    if(date.before(date2)){
                        t.setFechaNacimiento(fechaDatePicker.getDate());
                    }else{
                        JOptionPane.showMessageDialog(new JFrame(),"La fecha no es v√°lida, debe agregar una fecha anterior o igual a la actual.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                        guardar=false;
                    }                
                }else{
                    JOptionPane.showMessageDialog(new JFrame(),"Debe rellenar la espacio de la fecha de nacimiento del Toro.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                    guardar=false;                 
                }
                
                
                if (!pesoFormattedTextField.getText().equals("")){
                    t.setPeso(Double.parseDouble(pesoFormattedTextField.getText()));
                }
                t.setIdRaza((Raza) razaComboBox.getSelectedItem());
                t.setCaracteristicas(caracteristicasTextArea.getText());
                t.setEsToro((short)1);
                
                if(guardar){
                    try {
                        dbm.insert(t);
                        dbm.close();  
                        setVisible(false);
                        dispose();  
                    } catch (RollbackException ex) {
                        JOptionPane.showMessageDialog(new JFrame(),"El numero trazable ya pertenece a otro bovino.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(new JFrame(),"Debe incluir el n√∫mero trazable del Toro.","Error de operaci√≥n",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToroUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToroUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToroUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToroUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToroUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager TCUGanaderosPUEntityManager;
    private java.util.List<ucr.ac.cr.ecci.Models.Baja> bajaList;
    private javax.persistence.Query bajaQuery;
    private javax.swing.JTextArea caracteristicasTextArea;
    private javax.swing.JCheckBox editarCheckBox;
    private org.jdesktop.swingx.JXDatePicker fechaDatePicker;
    private javax.swing.JComboBox<String> fincaComboBox;
    private java.util.List<ucr.ac.cr.ecci.Models.Finca> fincaList;
    private javax.persistence.Query fincaQuery;
    private javax.swing.JButton guardarButton;
    private javax.swing.JFormattedTextField idFormattedTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JFormattedTextField pesoFormattedTextField;
    private javax.swing.JComboBox<String> razaComboBox;
    private java.util.List<ucr.ac.cr.ecci.Models.Raza> razaList;
    private javax.persistence.Query razaQuery;
    private javax.swing.JButton volverButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
