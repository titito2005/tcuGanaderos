/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ucr.ac.cr.ecci.Frames;

import ucr.ac.cr.ecci.DBManager;
import static ucr.ac.cr.ecci.Frames.VacaTableUI.centreWindow;
import ucr.ac.cr.ecci.Models.Bovino;
import ucr.ac.cr.ecci.Models.Servicio;
import ucr.ac.cr.ecci.Models.Vaca;

//import ucr.ac.cr.ecci.Models.ServicioPK;
import java.awt.Component;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.RollbackException;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;


/**
 *
 * @author Ricardo Alfaro
 */
public class ServicioUI extends javax.swing.JFrame {
    String vaca_id;
    Bovino bovino;
    Servicio servicio;
    boolean editar = false;
    private java.util.List<String> tipoServicios;
    /**
     * Creates new form ServicioUI
     */
    public ServicioUI() { 
        //TCUGanaderosPUEntityManager.getEntityManagerFactory().getCache().evictAll();
        initComponents();
    }
    
    public ServicioUI(Bovino bovino){
        centreWindow(this);
        initComponents();
        comprobacionComboBox1.addItem("Negativo");
        comprobacionComboBox1.addItem("Positivo");
        tipoServicioComboBox1.addItem("No definido");
        tipoServicioComboBox1.addItem("Monta natural");
        tipoServicioComboBox1.addItem("IA");
        tipoServicioComboBox1.addItem("IATF");
        tipoServicioComboBox1.addItem("Transferencia de embriones");
        this.bovino = bovino;
        this.vaca_id = Integer.toString(bovino.getId());
        jTextField5.setText(vaca_id);
        jTextField1.setText("Pronto a definir");
        int aux = (int)redrawServicio();
        jTextField2.setText(Integer.toString(aux));
    }
    
    public ServicioUI(Servicio servicio, Bovino bovino){;
        initComponents();
        comprobacionComboBox1.addItem("Negativo");
        comprobacionComboBox1.addItem("Positivo");
        tipoServicioComboBox1.addItem("No definido");
        tipoServicioComboBox1.addItem("Monta natural");
        tipoServicioComboBox1.addItem("IA");
        tipoServicioComboBox1.addItem("IATF");
        tipoServicioComboBox1.addItem("Transferencia de embriones");
        DBManager dbm = new DBManager();
        this.bovino=bovino;
        editar=true;
        centreWindow(this);
        this.servicio= servicio;
        Vaca vaca= servicio.getIdVaca();
        this.vaca_id = Integer.toString(vaca.getIdBovino());
        
        jTextField5.setText(vaca_id);
        
        jTextField1.setText(Integer.toString(servicio.getIdServicio()));//MODIFICAR ****
        
        if(servicio.getFechaServicio()!=null){
        fechaDatePicker.setDate(servicio.getFechaServicio());
        }

        Bovino bovinoPadreDB = dbm.findBovinoById(servicio.getIdToro());
        if(bovinoPadreDB!=null){
            padreComboBox.setSelectedItem(bovinoPadreDB);
        }else{
        }        

        if(servicio.getModoPalpacion()!=null){
        jTextField3.setText(servicio.getModoPalpacion());
        }
        
        if(servicio.getTipoServicio() != null){
            tipoServicioComboBox1.setSelectedItem(servicio.getTipoServicio());
        }
        
        if(servicio.getContadorServicios()!= 0){
        jTextField2.setText(Integer.toString(servicio.getContadorServicios()));
        }
        
        if(servicio.getEstaPreñada()){
            comprobacionComboBox1.setSelectedItem("Positivo");
        }else{
            comprobacionComboBox1.setSelectedItem("Negativo");
        }
    }
    
    long redrawServicio(){
        //java.util.List<ucr.ac.cr.ecci.Models.Servicio> servidasList;
        java.util.List <Long> servidasList;
        javax.persistence.Query servidasQuery;
        servidasQuery = TCUGanaderosPUEntityManager.createQuery("SELECT COUNT (s.idServicio) FROM Servicio s WHERE (s.idVaca.idBovino) =" + vaca_id);
        servidasList = servidasQuery.getResultList();
        long aux= servidasList.get(0);
        return aux;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        TCUGanaderosPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("TCUGanaderosPU").createEntityManager();
        bovinoQuery = bovinoQuery = java.beans.Beans.isDesignTime() ? null : TCUGanaderosPUEntityManager.createQuery("SELECT b FROM Bovino b WHERE b.esToro = 1");
        bovinoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : bovinoQuery.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fechaDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        padreComboBox = new javax.swing.JComboBox<>();
        tipoServicioComboBox1 = new javax.swing.JComboBox<>();
        comprobacionComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID del servicio");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha del servicio");

        jTextField2.setEditable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Servicios anteriores");

        fechaDatePicker.setFormats(new String[]{"dd/MM/yyyy"});
        fechaDatePicker.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fechaDatePickerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fechaDatePickerFocusLost(evt);
            }
        });
        fechaDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaDatePickerActionPerformed(evt);
            }
        });
        fechaDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fechaDatePickerPropertyChange(evt);
            }
        });

        jLabel4.setText("Método de comprobación de preñez");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo de servicio");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("ID de la vaca");

        jTextField5.setEditable(false);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel7.setText("ID del toro");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Servicio");

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        padreComboBox.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Bovino) {
                    Bovino b = (Bovino)value;
                    if(b.getEsToro()==1){
                        String id = Integer.toString(b.getId());
                        setText(id + "  " + b.getNombre());
                    }
                }
                return this;
            }
        });

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bovinoList, padreComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        padreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                padreComboBoxActionPerformed(evt);
            }
        });

        tipoServicioComboBox1.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Bovino) {
                    Bovino b = (Bovino)value;
                    if(b.getEsToro()==1){
                        String id = Integer.toString(b.getId());
                        setText(id + "  " + b.getNombre());
                    }
                }
                return this;
            }
        });
        tipoServicioComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoServicioComboBox1ActionPerformed(evt);
            }
        });

        comprobacionComboBox1.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Bovino) {
                    Bovino b = (Bovino)value;
                    if(b.getEsToro()==1){
                        String id = Integer.toString(b.getId());
                        setText(id + "  " + b.getNombre());
                    }
                }
                return this;
            }
        });
        comprobacionComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobacionComboBox1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Resultado de comprobación de preñez");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(padreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(tipoServicioComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel6))))
                            .addComponent(jTextField3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel9)
                                    .addComponent(comprobacionComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(padreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoServicioComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comprobacionComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void fechaDatePickerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaDatePickerFocusGained

    }//GEN-LAST:event_fechaDatePickerFocusGained

    private void fechaDatePickerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechaDatePickerFocusLost

    }//GEN-LAST:event_fechaDatePickerFocusLost

    private void fechaDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaDatePickerActionPerformed

    }//GEN-LAST:event_fechaDatePickerActionPerformed

    private void fechaDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fechaDatePickerPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaDatePickerPropertyChange

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //***----BOTON DE GUARDAR----*
        DBManager dbm = new DBManager();
        servicio = new Servicio();
        boolean guardar=true;
        
        Vaca v = new Vaca(Integer.parseInt(vaca_id));
       
        servicio.setIdVaca(v);
        
        if (fechaDatePicker.getDate()!=null){//FECHA
            Calendar cal = Calendar.getInstance();
            Date date= fechaDatePicker.getDate();
            Date date2= cal.getTime();
            if(date.before(date2)){
                servicio.setFechaServicio(fechaDatePicker.getDate());
            }else{
                JOptionPane.showMessageDialog(new JFrame(),"La fecha del servicio no es válida, debe agregar una fecha anterior o igual a la actual.","Error de operación",JOptionPane.ERROR_MESSAGE);
                guardar=false;
            }
        }else{
            JOptionPane.showMessageDialog(new JFrame(),"Debe agregar una fecha de servicio.","Error de operación",JOptionPane.ERROR_MESSAGE);
            guardar=false;
        }
        
        if(padreComboBox.getSelectedItem()!=null){
            Bovino bovinoPadreLocal = (Bovino) padreComboBox.getSelectedItem();//SELECCIONA TORO DONADOR
            Bovino bovinoPadreDB = dbm.findBovinoById(bovinoPadreLocal.getId());
            if(bovinoPadreDB!=null){
                servicio.setIdToro(bovinoPadreDB.getId());//SET TODRO DONADOR
            }else{
                JOptionPane.showMessageDialog(new JFrame(),"Toro no encontrado.","Error de operación",JOptionPane.ERROR_MESSAGE);
                guardar=false;                
            }
        }else{
            JOptionPane.showMessageDialog(new JFrame(),"Debe agregar un Toro a la base de datos para ingresarlo como donador.","Error de operación",JOptionPane.ERROR_MESSAGE);
            guardar=false;
        }
   
        if (!jTextField3.getText().equals("")){//PALPACION
            servicio.setModoPalpacion(jTextField3.getText());
        }else{
        }
        
        String aux = (String) tipoServicioComboBox1.getSelectedItem();
        servicio.setTipoServicio(aux);
        
        if (!jTextField2.getText().equals("")){//SERVIDAS ANTERIORES
            servicio.setContadorServicios(Integer.parseInt(jTextField2.getText()));
        }
        
       String comprobacion= (String )comprobacionComboBox1.getSelectedItem();
       if(comprobacion=="Negativo"){
           servicio.setEstaPreñada(false);
       }else{
           if(comprobacion=="Positivo"){
               servicio.setEstaPreñada(true);
           }
       }

        if(guardar){
            if(editar){
                try{
                    servicio.setIdServicio(Integer.parseInt(jTextField1.getText()));
                    dbm.updateServicio(servicio);
                    dbm.close();
                    setVisible(false);
                    dispose();
                    new ServiciosTableUI(this.bovino).setVisible(true);
                }catch(RollbackException ex){
                    JOptionPane.showMessageDialog(new JFrame(),"Error al guardar, verifique que todos los espacios fueron rellenados.","Error de operación",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                try {
                    dbm.insert(servicio);
                    dbm.close();  
                    setVisible(false);
                    dispose();
                    new ServiciosTableUI(this.bovino).setVisible(true);
                } catch (RollbackException ex) {
                    JOptionPane.showMessageDialog(new JFrame(),"Error al guardar, verifique que todos los espacios fueron rellenados.","Error de operación",JOptionPane.ERROR_MESSAGE);
                } 
            } 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        dispose();
        new ServiciosTableUI(this.bovino).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void padreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_padreComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_padreComboBoxActionPerformed

    private void tipoServicioComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoServicioComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoServicioComboBox1ActionPerformed

    private void comprobacionComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobacionComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comprobacionComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServicioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServicioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServicioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServicioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServicioUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager TCUGanaderosPUEntityManager;
    private java.util.List<ucr.ac.cr.ecci.Models.Bovino> bovinoList;
    private javax.persistence.Query bovinoQuery;
    private javax.swing.JComboBox<String> comprobacionComboBox1;
    private org.jdesktop.swingx.JXDatePicker fechaDatePicker;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JComboBox<String> padreComboBox;
    private javax.swing.JComboBox<String> tipoServicioComboBox1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
